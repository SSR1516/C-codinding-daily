class Solution {
  public:
    int minimizeCost(int k, vector<int>& arr) {
        int n = arr.size();
        vector<int> dp(n, INT_MAX);  // DP array to store the minimum cost to reach each stone
        dp[0] = 0;  // Base case: No cost to reach the first stone

        for (int i = 0; i < n; i++) {
            for (int j = i+1; j <= i+k && j < n; j++) {
                dp[j] = min(dp[j], dp[i] + abs(arr[i] - arr[j]));
            }
        }

        return dp[n-1];  // Return the minimum cost to reach the last stone
    }
};
